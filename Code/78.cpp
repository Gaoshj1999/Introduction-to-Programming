#include <iostream>
using namespace std;
int main()
{
    int i;
    static int a[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    static int b[10] = {0, 1, 2, 3, 4};              //可以给出部分的初始值
    static int c[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}; //如果初始值全部给出则可以不用制定数组长度
    static int d[3][4] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
    static int e[3][4] = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}};
    static int f[3][4] = {{1}, {0, 6}, {0, 0, 11}};                    //可以列出部分初始值
    static int g[][4] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};       //列出全部初始值第一维下标可省略(规定的只能第一维省略)，注之后几维就不行了
    static int h[][4] = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}}; //列出全部初始值第一维下标可省略，注之后几维就不行了
    //如果不作任何初始化，局部非静态数组中会存在垃圾数据，静态数组中的数据默认初始化为0
    //如果只对部分元素初始化，则剩下未显式初始化的元素将自动被初始化为0
    int fb[20]={1,1};
    for(int i=2;i<20;i++)
    {
        fb[i]=fb[i-2]+fb[i-1];
    }
    for(i=0;i<20;i++)
    {
        if(i%5==0)
        {
            cout<<endl;
        }
        cout.width(12);//设置每一项的输出宽度为12
        cout<<fb[i];
    }
    return 0;
}